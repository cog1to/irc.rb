diff --git a/irc.rb b/irc.rb
index 2514c78..18a1d76 100755
--- a/irc.rb
+++ b/irc.rb
@@ -5,2 +5,3 @@ require "io/console"
 require 'optparse'
+require "openssl"
 
@@ -177,2 +178,3 @@ options = {
 	:server => "irc.rizon.net",
+	:tls => false
 }
@@ -192,2 +194,5 @@ OptionParser.new do |opt|
 	}
+	opt.on("-t", "--tls") { |o|
+		options[:tls] = true
+	}
 	opt.on("-h", "--help") {
@@ -213,3 +218,3 @@ end
 class IRC
-	def initialize(addr, port)
+	def initialize(addr, port, tls)
 		# Save connection data
@@ -217,2 +222,3 @@ class IRC
 		@port = port
+		@tls = tls
 		@callback = nil
@@ -231,3 +237,8 @@ class IRC
 		@buffer = ""
-		@socket = TCPSocket.new(@addr, @port, connect_timeout: 30)
+		if @tls then
+			@socket = OpenSSL::SSL::SSLSocket.open(@addr, @port)
+			@socket.connect
+		else
+			@socket = TCPSocket.new(@addr, @port)
+		end
 		listen()
@@ -240,3 +251,7 @@ class IRC
 					IO.select([@socket])
-					@buffer += @socket.recv(128)
+					if @socket.respond_to? "sysread" then
+						@buffer += @socket.sysread(128)
+					else
+						@buffer += @socket.recv(128)
+					end
 
@@ -267,3 +282,10 @@ class IRC
 			begin
-				@socket.send(msg + "\r\n", 0)
+				if @socket.respond_to? "syswrite" then
+					@socket.syswrite(msg + "\r\n")
+				else
+					@socket.send(msg + "\r\n", 0)
+				end
+ 			rescue => ex
+ 				@err.call(ex) if @err
+ 				close()
 			rescue => ex
@@ -277,3 +299,7 @@ class IRC
 		if @socket then
-			@socket.close()
+			if @socket.respond_to? "stop" then
+				@socket.stop()
+			else
+				@socket.close()
+			end
 			@socket = nil
@@ -803,3 +829,3 @@ end
 class Client
-	def initialize(host, port, user, pass)
+	def initialize(host, port, user, pass, tls)
 		@host = host
@@ -808,2 +834,3 @@ class Client
 		@pass = pass
+		@tls = tls
 		@state = :closed
@@ -852,3 +879,3 @@ class Client
 		begin
-			@irc = IRC.new(@host, @port)
+			@irc = IRC.new(@host, @port, @tls)
 			@irc.on_message { |msg| handle_message(msg) }
@@ -2146,3 +2173,9 @@ begin
 	# Setup
-	client = Client.new(options[:server], options[:port], options[:user], options[:pass])
+	client = Client.new(
+		options[:server],
+		options[:port],
+		options[:user],
+		options[:pass],
+		options[:tls]
+	)
 	app = App.new(client)
